{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bff08\\\\Desktop\\\\ProyectoRickandMorty\\\\rick_and_morty\\\\src\\\\components\\\\modal\\\\modal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport style from \"./modal.module.css\";\nimport KeyBoard from \"../teclado/keyboard\";\nimport Display from \"../display/display\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleVerification = () => {\n    // Verifica el código aquí y cierra la modal si es correcto\n    if (Display.value === \"0137\") {\n      alert(\"¡Código correcto!\");\n      handleCloseModal(); // Llama a la función para cerrar la modal\n    } else {\n      alert(\"Código incorrecto. Intenta de nuevo.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isModalOpen ? style.containerModal : style.hidden,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MODAL PRUEBA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(KeyBoard, {\n      onOk: handleVerification,\n      onDelete: setDisplayValue(handleDelete())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"wHjZgXX2zsTTvXju4vO/8p9ij/k=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","style","KeyBoard","Display","jsxDEV","_jsxDEV","Modal","_s","isModalOpen","setIsModalOpen","handleCloseModal","handleVerification","value","alert","className","containerModal","hidden","children","fileName","_jsxFileName","lineNumber","columnNumber","onOk","onDelete","setDisplayValue","handleDelete","_c","$RefreshReg$"],"sources":["C:/Users/bff08/Desktop/ProyectoRickandMorty/rick_and_morty/src/components/modal/modal.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport style from \"./modal.module.css\";\r\nimport KeyBoard from \"../teclado/keyboard\";\r\nimport Display from \"../display/display\";\r\n\r\nconst Modal = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(true);\r\n\r\n  const handleCloseModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleVerification = () => {\r\n    // Verifica el código aquí y cierra la modal si es correcto\r\n    if (Display.value === \"0137\") {\r\n      alert(\"¡Código correcto!\");\r\n      handleCloseModal(); // Llama a la función para cerrar la modal\r\n    } else {\r\n      alert(\"Código incorrecto. Intenta de nuevo.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={isModalOpen ? style.containerModal : style.hidden}>\r\n      <h1>MODAL PRUEBA</h1>\r\n      <KeyBoard onOk={handleVerification} onDelete={setDisplayValue(handleDelete())} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC7BD,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,IAAIR,OAAO,CAACS,KAAK,KAAK,MAAM,EAAE;MAC5BC,KAAK,CAAC,mBAAmB,CAAC;MAC1BH,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACLG,KAAK,CAAC,sCAAsC,CAAC;IAC/C;EACF,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAEN,WAAW,GAAGP,KAAK,CAACc,cAAc,GAAGd,KAAK,CAACe,MAAO;IAAAC,QAAA,gBAChEZ,OAAA;MAAAY,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhB,OAAA,CAACH,QAAQ;MAACoB,IAAI,EAAEX,kBAAmB;MAACY,QAAQ,EAAEC,eAAe,CAACC,YAAY,CAAC,CAAC;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEV,CAAC;AAACd,EAAA,CAvBID,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAyBX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}