{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bff08\\\\Desktop\\\\ProyectoRickandMorty\\\\rick_and_morty\\\\src\\\\components\\\\switch\\\\Switch.jsx\";\nimport React, { useState } from 'react';\nimport './switch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Switch = () => {\n  const [theme, setTheme] = useState < Theme > 'light';\n  const handleChange = e => setTheme(e.target.checked ? 'dark' : 'light');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-switch\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Change Theme \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: handleChange,\n        checked: theme === 'dark'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = Switch;\nvar _c;\n$RefreshReg$(_c, \"Switch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Switch","theme","setTheme","Theme","handleChange","e","target","checked","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/bff08/Desktop/ProyectoRickandMorty/rick_and_morty/src/components/switch/Switch.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './switch.css';\r\ntype ChangeEvent = React.ChangeEvent<HTMLInputElement>\r\n\r\ntype Theme = 'dark' | 'light'\r\n\r\nexport const Switch = () => {\r\n\r\n    const [theme, setTheme] = useState<Theme>('light')\r\n\r\n    const handleChange = (e: ChangeEvent) => setTheme(e.target.checked ? 'dark' : 'light')\r\n\r\n    return (\r\n        <div className=\"container-switch\">\r\n            <span>Change Theme </span>\r\n            <label className=\"switch\">\r\n                <input type=\"checkbox\" onChange={handleChange} checked={theme === 'dark'} />\r\n                <span className=\"slider\"></span>\r\n            </label>\r\n        </div>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKtB,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAExB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,GAACM,KAAK,GAAE,OAAQ;EAElD,MAAMC,YAAY,GAAIC,CAAc,IAAKH,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACC,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAEtF,oBACIR,OAAA;IAAKS,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BV,OAAA;MAAAU,QAAA,EAAM;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1Bd,OAAA;MAAOS,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBV,OAAA;QAAOe,IAAI,EAAC,UAAU;QAACC,QAAQ,EAAEX,YAAa;QAACG,OAAO,EAAEN,KAAK,KAAK;MAAO;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5Ed,OAAA;QAAMS,SAAS,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAAG,EAAA,GAfYhB,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}