{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER, GET_CHARACTER_DETAILS } from \"./Actions\";\nconst initialState = {\n  myFavorites: [],\n  characterDetail: {},\n  allCharacters: []\n};\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_FAV:\n      // Reemplaza myFavorites por allCharacters en la copia del estado global\n      const updatedAllCharacters = [...state.allCharacters, action.payload];\n      return {\n        ...state,\n        myFavorites: updatedAllCharacters,\n        allCharacters: updatedAllCharacters // Agrega el nuevo personaje a allCharacters\n      };\n    case REMOVE_FAV:\n      // Filtrar los favoritos para eliminar el personaje con la ID correspondiente\n      const filteredFavorites = state.myFavorites.filter(fav => fav.id !== Number(action.payload));\n      return {\n        ...state,\n        myFavorites: filteredFavorites\n      };\n    case GET_CHARACTER_DETAILS:\n      // Agregar el personaje detallado a myFavorites\n      return {\n        ...state,\n        characterDetail: action.payload\n      };\n    case ORDER:\n      const sortedCharacters = [...state.myFavorites].sort((a, b) => {\n        if (action.payload === 'A') {\n          return a.id - b.id;\n        } else if (action.payload === 'D') {\n          return b.id - a.id;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        myFavorites: sortedCharacters\n      };\n    case FILTER:\n      // Filtra los personajes favoritos por género\n      const filteredCharacters = state.allCharacters.filter(character => {\n        return character.gender === action.payload;\n      });\n      return {\n        ...state,\n        myFavorites: [...state.myFavorites, ...filteredCharacters] // Combina los personajes filtrados con los originales\n      };\n    default:\n      return state;\n  }\n}\nexport default reducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","GET_CHARACTER_DETAILS","initialState","myFavorites","characterDetail","allCharacters","reducer","state","action","type","updatedAllCharacters","payload","filteredFavorites","filter","fav","id","Number","sortedCharacters","sort","a","b","filteredCharacters","character","gender"],"sources":["C:/Users/bff08/Desktop/ProyectoRickandMorty/rick_and_morty/src/Redux/reducer.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER, ORDER, GET_CHARACTER_DETAILS } from \"./Actions\";\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    characterDetail: {},\r\n    allCharacters: []\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_FAV:\r\n            // Reemplaza myFavorites por allCharacters en la copia del estado global\r\n            const updatedAllCharacters = [...state.allCharacters, action.payload];\r\n            return {\r\n                ...state,\r\n                myFavorites: updatedAllCharacters,\r\n                allCharacters: updatedAllCharacters // Agrega el nuevo personaje a allCharacters\r\n            };\r\n        case REMOVE_FAV:\r\n            // Filtrar los favoritos para eliminar el personaje con la ID correspondiente\r\n            const filteredFavorites = state.myFavorites.filter((fav) => fav.id !== Number(action.payload));\r\n            return {\r\n                ...state,\r\n                myFavorites: filteredFavorites\r\n            };\r\n        case GET_CHARACTER_DETAILS:\r\n            // Agregar el personaje detallado a myFavorites\r\n            return {\r\n                ...state,\r\n                characterDetail: action.payload\r\n            };\r\n        case ORDER:\r\n            const sortedCharacters = [...state.myFavorites].sort((a, b) => {\r\n                if (action.payload === 'A') {\r\n                    return a.id - b.id;\r\n                } else if (action.payload === 'D') {\r\n                    return b.id - a.id;\r\n                }\r\n                return 0;\r\n            });\r\n            return {\r\n                ...state,\r\n                myFavorites: sortedCharacters\r\n            };\r\n        case FILTER:\r\n            // Filtra los personajes favoritos por género\r\n            const filteredCharacters = state.allCharacters.filter(character => {\r\n                return character.gender === action.payload;\r\n            });\r\n            return {\r\n                ...state,\r\n                myFavorites: [...state.myFavorites, ...filteredCharacters] // Combina los personajes filtrados con los originales\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,qBAAqB,QAAQ,WAAW;AAErF,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,eAAe,EAAE,CAAC,CAAC;EACnBC,aAAa,EAAE;AACnB,CAAC;AAED,SAASC,OAAOA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,EAAE;EAC3C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKZ,OAAO;MACR;MACA,MAAMa,oBAAoB,GAAG,CAAC,GAAGH,KAAK,CAACF,aAAa,EAAEG,MAAM,CAACG,OAAO,CAAC;MACrE,OAAO;QACH,GAAGJ,KAAK;QACRJ,WAAW,EAAEO,oBAAoB;QACjCL,aAAa,EAAEK,oBAAoB,CAAC;MACxC,CAAC;IACL,KAAKZ,UAAU;MACX;MACA,MAAMc,iBAAiB,GAAGL,KAAK,CAACJ,WAAW,CAACU,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKC,MAAM,CAACR,MAAM,CAACG,OAAO,CAAC,CAAC;MAC9F,OAAO;QACH,GAAGJ,KAAK;QACRJ,WAAW,EAAES;MACjB,CAAC;IACL,KAAKX,qBAAqB;MACtB;MACA,OAAO;QACH,GAAGM,KAAK;QACRH,eAAe,EAAEI,MAAM,CAACG;MAC5B,CAAC;IACL,KAAKX,KAAK;MACN,MAAMiB,gBAAgB,GAAG,CAAC,GAAGV,KAAK,CAACJ,WAAW,CAAC,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC3D,IAAIZ,MAAM,CAACG,OAAO,KAAK,GAAG,EAAE;UACxB,OAAOQ,CAAC,CAACJ,EAAE,GAAGK,CAAC,CAACL,EAAE;QACtB,CAAC,MAAM,IAAIP,MAAM,CAACG,OAAO,KAAK,GAAG,EAAE;UAC/B,OAAOS,CAAC,CAACL,EAAE,GAAGI,CAAC,CAACJ,EAAE;QACtB;QACA,OAAO,CAAC;MACZ,CAAC,CAAC;MACF,OAAO;QACH,GAAGR,KAAK;QACRJ,WAAW,EAAEc;MACjB,CAAC;IACL,KAAKlB,MAAM;MACP;MACA,MAAMsB,kBAAkB,GAAGd,KAAK,CAACF,aAAa,CAACQ,MAAM,CAACS,SAAS,IAAI;QAC/D,OAAOA,SAAS,CAACC,MAAM,KAAKf,MAAM,CAACG,OAAO;MAC9C,CAAC,CAAC;MACF,OAAO;QACH,GAAGJ,KAAK;QACRJ,WAAW,EAAE,CAAC,GAAGI,KAAK,CAACJ,WAAW,EAAE,GAAGkB,kBAAkB,CAAC,CAAC;MAC/D,CAAC;IACL;MACI,OAAOd,KAAK;EACpB;AACJ;AAEA,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}